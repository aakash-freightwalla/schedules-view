{"version":3,"sources":["assets/chevron-left.svg","assets/chevron-right.svg","misc/mock.js","components/Summary/Summary.js","misc/templates.js","components/ModeToggle/ModeToggle.js","components/Sailing/Sailing.js","misc/lib.js","components/Search/Search.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SUMMARY_RESPONSE","sourcePort","portName","portCountry","destinationPort","type","container","incoTerms","getRandomInt","lower","upper","Math","floor","random","getFakeSailingData","nos","today","moment","Array","from","length","earliest","format","add","latest","sailingDate","transitTime","departure","toISOString","cutoffOffset","arrival","clone","travelDate","travelDays","rate","rateCurrency","rateType","deliveryDate","transhipment","routeDetails","routing","vesselDepartureDate","srcPort","containers","weight","carrier","dstPort","portOpenDate","subtract","ensCutoffDateTime","docCutoffDateTime","portCutoffDateTime","vesselArrivalDate","costDetails","totalCost","totalCostCurrency","details","title","cost","baseCost","baseCurrency","costType","description","notes","message","getFakeSailing","days","diff","addition","getRandomDate","sort","_ref","_ref2","a","b","am","bm","isAfter","isBefore","Summary","props","template","subtitle","className","react_default","createElement","map","key","join","MODE_OPTIONS","label","value","ModeToggle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onResize","bind","assertThisInitialized","state","selected","window","addEventListener","removeEventListener","_this2","classNames","push","onClick","onOptionSelected","_this3","target","setState","onSelectionChange","innerWidth","Component","Sailing","onToggleDetails","showDetails","viewType","mobileToggleClassNames","renderOfferPrice","renderCostView","renderScheduleView","renderDetails","_this$props$costDetai","toLocaleString","_this$props","_this$props$routeDeta","column","concat","each","calendar","day","marks","reduce","components","start","end","mark","style","left","offset","date","text","right","_ref3","content","getComputedMarks","renderCalendarBackground","renderTimelineInfo","renderTimeline","_this$props2","calendarEarliest","reference","calendarLatest","forEach","_ref4","defaultProps","getCalendar","minDate","weeks","_","i","Search","onModeChange","onCalendarChange","changeCalendar","sailings","margin","min","max","summary","components_Summary_Summary","components_ModeToggle_ModeToggle","renderContent","_this$state","renderHeader","components_Sailing_Sailing","assign","headerClassName","renderTableHeader","renderCalendar","slicedToArray","alt","src","CHEVRON_LEFT_ICON","unit","CHEVRON_RIGHT_ICON","_ref5","_this$state2","scrollDate","isSame","params","_this4","App","components_Search_Search","Boolean","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c479e30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chevron-left.a55ce707.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-right.ddd882ba.svg\";","import moment from 'moment';\n\nexport const SUMMARY_RESPONSE = {\n  sourcePort: {\n    portName: 'Nhava Sheva Port',\n    portCountry: 'India'\n  },\n  destinationPort: {\n    portName: 'Felixstowe Port',\n    portCountry: 'United Kingdom'\n  },\n  type: 'FCL',\n  container: 1,\n  incoTerms: 'EXPORT-CNG'\n};\n\nexport function getRandomDate(lower, upper) {\n  let days = upper.diff(lower, 'days'),\n    addition = Math.floor(Math.random() * days);\n  return lower.add(addition, 'days');\n}\n\nexport function getRandomInt(lower, upper) {\n  return Math.floor(lower + Math.random() * (upper - lower));\n}\n\nexport function getFakeSailing(sailingDate, transitTime) {\n  let departure = sailingDate.toISOString(),\n    cutoffOffset = getRandomInt(1, 5),\n    arrival = sailingDate\n      .clone()\n      .add(transitTime, 'days')\n      .toISOString();\n  return {\n    travelDate: departure,\n    travelDays: transitTime,\n    rate: {\n      rateCurrency: 'USD',\n      rate: 575,\n      rateType: '20\\''\n    },\n    deliveryDate: arrival,\n    transhipment: 'Direct',\n    routeDetails: {\n      routing: 'Direct Shipment',\n      vesselDepartureDate: departure,\n      srcPort: 'Nhava Sheva Port, India',\n      containers: [\n        {\n          type: 'size_20',\n          weight: 23\n        }\n      ],\n      carrier: 'ECON SHIPPING',\n      dstPort: 'Felixstowe Port, United Kingdom',\n      portOpenDate: sailingDate\n        .clone()\n        .subtract(cutoffOffset + 3, 'days')\n        .toISOString(),\n      ensCutoffDateTime: sailingDate\n        .clone()\n        .subtract(cutoffOffset + 2, 'days')\n        .toISOString(),\n      docCutoffDateTime: sailingDate\n        .clone()\n        .subtract(cutoffOffset + 1, 'days')\n        .toISOString(),\n      portCutoffDateTime: sailingDate\n        .clone()\n        .subtract(cutoffOffset, 'days')\n        .toISOString(),\n      vesselArrivalDate: arrival\n    },\n    costDetails: {\n      totalCost: 53225,\n      totalCostCurrency: 'INR',\n      details: [\n        {\n          title: 'Origin Terminal Charges',\n          cost: [\n            {\n              rateCurrency: 'INR',\n              baseCost: 9000,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Factory THC',\n              rate: 9000\n            },\n            {\n              rateCurrency: 'INR',\n              baseCost: 250,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Seal Charges',\n              rate: 250\n            },\n            {\n              rateCurrency: 'INR',\n              baseCost: 2500,\n              baseCurrency: 'INR',\n              costType: 'BL',\n              description: 'BL Fee',\n              rate: 2500\n            }\n          ]\n        },\n        {\n          title: 'Shipping Line (ECON SHIPPING)',\n          cost: [\n            {\n              rateCurrency: 'USD',\n              baseCost: 40825,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Freight',\n              rate: 575\n            }\n          ]\n        },\n        {\n          title: 'Coordination',\n          cost: [\n            {\n              rateCurrency: 'INR',\n              baseCost: 650,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Coordination Fees',\n              rate: 650\n            }\n          ]\n        }\n      ],\n      notes: [\n        {\n          type: 'free_days',\n          message:\n            'Detention free days subject to approval from shipping line.'\n        },\n        {\n          type: 'terminal',\n          message: 'Terminal charges are estimated.'\n        },\n        {\n          type: 'rate_expiry',\n          message: 'Rate\\'valid until 2018-12-31.'\n        },\n        {\n          type: 'currency',\n          message:\n            'Currency exchange used is 1 USD = 71 INR. Final rate subject to fluctuations in currency exchange.'\n        }\n      ]\n    }\n  };\n}\n\nexport function getFakeSailingData(nos) {\n  const today = moment();\n  return Array.from({ length: nos }, () => {\n    let earliest = moment(today.format('DD-MM-YYYY'), 'DD-MM-YYYY')\n        .add(3, 'days'),\n      latest = earliest.add(getRandomInt(10, 20), 'days'),\n      reference = getRandomDate(earliest, latest);\n    return getFakeSailing(reference, getRandomInt(10, 25));\n  }).sort(({ travelDate: a }, { travelDate: b }) => {\n    let am = moment(a),\n      bm = moment(b);\n    if (am.isAfter(bm)) {\n      return 1;\n    }\n    if (am.isBefore(bm)) {\n      return -1;\n    }\n    return 0;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Summary.scss';\n\nSummary.propTypes = {\n  sourcePort: PropTypes.shape({\n    portName: PropTypes.string,\n    portCountry: PropTypes.string\n  }),\n  destinationPort: PropTypes.shape({\n    portName: PropTypes.string,\n    portCountry: PropTypes.string\n  }),\n  type: PropTypes.string,\n  container: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  incoTerms: PropTypes.string\n};\n\nfunction Summary(props) {\n  const { sourcePort, destinationPort, type, container, incoTerms } = props;\n  const template = [\n    {\n      title: sourcePort.portName,\n      subtitle: sourcePort.portCountry,\n      className: 'source'\n    },\n    {\n      title: '→',\n      subtitle: null,\n      className: 'to'\n    },\n    {\n      title: destinationPort.portName,\n      subtitle: destinationPort.portCountry,\n      className: 'destination'\n    },\n    {\n      title: type,\n      subtitle: 'Type',\n      className: 'type'\n    },\n    {\n      title: container,\n      subtitle: 'Container',\n      className: 'container'\n    },\n    {\n      title: incoTerms,\n      subtitle: 'INCO Terms',\n      className: 'inco'\n    }\n  ];\n  return (\n    <div className='summary'>\n      {template.map(({ title, subtitle, className }, key) => (\n        <div className={['partial', className].join(' ')} key={key}>\n          <div className='title'>{title}</div>\n          {subtitle && <div className='subtitle'>{subtitle}</div>}\n        </div>\n      ))}\n      <div className='partial action'>\n        <button className='themed secondary modify'>Modify</button>\n        <button className='themed primary search'>Search</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Summary;\n","export const MODE_OPTIONS = [\n  {\n    label: 'List View',\n    value: 'COST'\n  },\n  {\n    label: 'Schedules View',\n    value: 'SCHEDULE'\n  }\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MODE_OPTIONS } from '../../misc/templates';\nimport './ModeToggle.scss';\n\nclass ModeToggle extends Component {\n  static propTypes = {\n    onSelectionChange: PropTypes.func\n  };\n  \n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.state = {\n      selected: 0\n    };\n  }\n  \n  componentDidMount() {\n    window.addEventListener('resize', this.onResize);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResize);\n  }\n  \n  render() {\n    const { selected } = this.state;\n    return (\n      <div className='mode-toggle'>\n        {MODE_OPTIONS.map(({ label, value }, key) => {\n          const classNames = ['mode-option'];\n          if (selected === key) {\n            classNames.push('selected');\n          }\n          return (\n            <button\n              key={key}\n              value={value}\n              className={classNames.join(' ')}\n              onClick={this.onOptionSelected(key)}\n            >\n              {label}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n  \n  onOptionSelected(key) {\n    return ({ target: { value } }) => {\n      if (this.state.selected === key) {\n        return;\n      }\n      this.setState({ selected: key });\n      const { onSelectionChange } = this.props;\n      onSelectionChange(value);\n    };\n  }\n  \n  onResize() {\n    const { selected } = this.state;\n    if (selected === 1) {\n      const { innerWidth } = window,\n        { onSelectionChange } = this.props;\n      if (innerWidth < 768 && onSelectionChange) {\n        const validSelection = 0;\n        this.setState({ selected: validSelection });\n        onSelectionChange(MODE_OPTIONS[validSelection].value);\n      }\n    }\n  }\n}\n\nexport default ModeToggle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './Sailings.scss';\n\nclass Sailing extends Component {\n  static propTypes = {\n    travelDate: PropTypes.string,\n    travelDays: PropTypes.number,\n    rate: PropTypes.shape({\n      rateCurrency: PropTypes.string,\n      rate: PropTypes.number,\n      rateType: PropTypes.string\n    }),\n    deliveryDate: PropTypes.string,\n    transhipment: PropTypes.string,\n    routeDetails: PropTypes.shape({\n      routing: PropTypes.string,\n      vesselDepartureDate: PropTypes.string,\n      srcPort: PropTypes.string,\n      containers: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          weight: PropTypes.number\n        })\n      ),\n      carrier: PropTypes.string,\n      dstPort: PropTypes.string,\n      portOpenDate: PropTypes.string,\n      ensCutoffDateTime: PropTypes.string,\n      docCutoffDateTime: PropTypes.string,\n      portCutoffDateTime: PropTypes.string,\n      vesselArrivalDate: PropTypes.string\n    }),\n    costDetails: PropTypes.shape({\n      totalCost: PropTypes.number,\n      totalCostCurrency: PropTypes.string,\n      details: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          cost: PropTypes.arrayOf(\n            PropTypes.shape({\n              rateCurrency: PropTypes.string,\n              baseCost: PropTypes.number,\n              baseCurrency: PropTypes.string,\n              costType: PropTypes.string,\n              description: PropTypes.string,\n              rate: PropTypes.number\n            })\n          )\n        })\n      ),\n      notes: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          message: PropTypes.string\n        })\n      )\n    }),\n    \n    viewType: PropTypes.oneOf(['COST', 'SCHEDULE']),\n    calendar: PropTypes.arrayOf(\n      PropTypes.shape({\n        day: PropTypes.number,\n        date: PropTypes.number,\n        reference: PropTypes.object\n      })\n    ),\n    changeCalendar: PropTypes.func\n  };\n  \n  static defaultProps = {\n    viewType: 'COST'\n  };\n  \n  constructor(props) {\n    super(props);\n    this.onToggleDetails = this.onToggleDetails.bind(this);\n    this.state = {\n      showDetails: false\n    };\n  }\n  \n  render() {\n    const { showDetails } = this.state,\n      { viewType } = this.props,\n      classNames = ['sailing-option'],\n      mobileToggleClassNames = ['mobile', 'detail-toggle'];\n    if (showDetails) {\n      classNames.push('details-visible');\n      mobileToggleClassNames.push('hide');\n    } else {\n      mobileToggleClassNames.push('show');\n    }\n    return (\n      <div className={classNames.join(' ')}>\n        {this.renderOfferPrice()}\n        {viewType === 'COST'\n          ? this.renderCostView()\n          : this.renderScheduleView()}\n        {showDetails && this.renderDetails()}\n        <div\n          className={mobileToggleClassNames.join(' ')}\n          onClick={this.onToggleDetails(!showDetails)}\n        >\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </div>\n      </div>\n    );\n  }\n  \n  renderOfferPrice() {\n    const {\n      costDetails: { totalCost, totalCostCurrency }\n    } = this.props;\n    return (\n      <div className='sailing-price'>\n        <div className='price'>\n          {totalCostCurrency.toLocaleString()} {totalCost}\n        </div>\n        <button className='themed primary'>Select</button>\n        <div\n          className='detail-toggle show'\n          onClick={this.onToggleDetails(true)}\n        >\n          Show Details\n        </div>\n      </div>\n    );\n  }\n  \n  renderCostView() {\n    const {\n        travelDate,\n        travelDays,\n        rate,\n        transhipment,\n        deliveryDate,\n        routeDetails: { srcPort, dstPort, carrier }\n      } = this.props,\n      template = [\n        {\n          title: moment(travelDate).format('MMM Do'),\n          subtitle: srcPort,\n          column: 'Date of Sailing',\n          className: 'departure'\n        },\n        {\n          title: `${travelDays} Days`,\n          subtitle: transhipment,\n          column: 'Sailing Days',\n          className: 'routing'\n        },\n        {\n          title: `${rate.rateCurrency} ${rate.rate}`,\n          subtitle: carrier,\n          column: `Freight Per ${rate.rateType}`,\n          className: 'rate'\n        },\n        {\n          title: moment(deliveryDate).format('MMM Do'),\n          subtitle: dstPort,\n          column: 'Delivery Date',\n          className: 'delivery'\n        }\n      ];\n    return (\n      <div className='cost-view'>\n        {template.map((each, key) => {\n          const { title, subtitle, column, className } = each;\n          return [\n            <div\n              key={`label-${key}`}\n              className={['label', className].join(' ')}\n            >\n              {column}\n            </div>,\n            <div\n              key={`value-${key}`}\n              className={['column', className].join(' ')}\n            >\n              <div className='title'>{title}</div>\n              <div className='subtitle'>{subtitle}</div>\n            </div>\n          ];\n        })}\n      </div>\n    );\n  }\n  \n  renderCalendarBackground() {\n    const { calendar } = this.props;\n    return (\n      <div className='background'>\n        {calendar.map(({ day }, key) => {\n          const classNames = ['day'];\n          if (day === 0) {\n            classNames.push('sunday');\n          }\n          return (\n            <div key={key} className={classNames.join(' ')}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n  \n  renderTimelineInfo(marks) {\n    return (\n      <div className='info'>\n        {marks.reduce(\n          (components, { start, end }, key) => {\n            if (start.mark) {\n              components.push(\n                <div\n                  key={`start-${key}`}\n                  className='content start'\n                  style={{\n                    left: `${start.offset * 100}%`\n                  }}\n                >\n                  {start.date.format(start.format)}<br/>\n                  {start.text}\n                </div>\n              );\n            }\n            \n            if (end.mark) {\n              components.push(\n                <div\n                  key={key}\n                  className='content end'\n                  style={{\n                    right: `${end.offset * 100}%`\n                  }}\n                >\n                  {end.date.format(end.format)}<br/>\n                  {end.text}\n                </div>\n              );\n            }\n            \n            return components;\n          },\n          []\n        )}\n      </div>\n    );\n  }\n  \n  renderTimeline(marks) {\n    return (\n      <div className='timeline'>\n        {marks.map(\n          ({ start, end, className, content }, key) => {\n            const classNames = ['blocks', className];\n            return (\n              <div\n                key={key}\n                className={classNames.join(' ')}\n                style={{\n                  left: `${start.offset * 100}%`,\n                  right: `${end.offset * 100}%`\n                }}\n              >\n                {content}\n              </div>\n            );\n          }\n        )}\n      </div>\n    );\n  }\n  \n  renderScheduleView() {\n    const marks = this.getComputedMarks();\n    return (\n      <div className='schedule-view'>\n        {this.renderCalendarBackground()}\n        <div className='timeline-container'>\n          {this.renderTimelineInfo(marks)}\n          {this.renderTimeline(marks)}\n        </div>\n      </div>\n    );\n  }\n  \n  renderDetails() {\n    return (\n      <div className='details'>\n        <div className='content'>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquid, consectetur corporis dolor dolore ea\n            incidunt, ipsam iste molestiae neque nisi, quae rem ut\n            veniam! Harum id quae temporibus. Optio, ratione.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquid, consectetur corporis dolor dolore ea\n            incidunt, ipsam iste molestiae neque nisi, quae rem ut\n            veniam! Harum id quae temporibus. Optio, ratione.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquid, consectetur corporis dolor dolore ea\n            incidunt, ipsam iste molestiae neque nisi, quae rem ut\n            veniam! Harum id quae temporibus. Optio, ratione.\n          </p>\n        </div>\n        <div\n          className='detail-toggle hide'\n          onClick={this.onToggleDetails(false)}\n        >\n          Hide Details\n        </div>\n      </div>\n    );\n  }\n  \n  getComputedMarks() {\n    const {\n        calendar,\n        travelDays,\n        routeDetails\n      } = this.props,\n      { length } = calendar,\n      calendarEarliest = calendar[0].reference,\n      calendarLatest = calendar[calendar.length - 1].reference,\n      portCutoffDateTime = moment(routeDetails.portCutoffDateTime),\n      vesselDepartureDate = moment(routeDetails.vesselDepartureDate),\n      vesselArrivalDate = moment(routeDetails.vesselArrivalDate);\n    \n    const marks = [\n      {\n        start: {\n          date: portCutoffDateTime,\n          offset: -1,\n          mark: true,\n          text: 'Port Cutoff',\n          format: 'Do MMM'\n        },\n        end: {\n          date: vesselArrivalDate,\n          offset: -1,\n          mark: false\n        },\n        className: 'complete-block',\n        content: ''\n      },\n      {\n        start: {\n          date: vesselDepartureDate,\n          offset: -1,\n          mark: true,\n          text: 'Shipment Starts',\n          format: 'Do MMM'\n        },\n        end: {\n          date: vesselArrivalDate,\n          offset: -1,\n          mark: true,\n          text: 'Shipment Arrives',\n          format: 'Do MMM'\n        },\n        className: 'sailing-block',\n        content: `${travelDays} Days`\n      }\n    ];\n    \n    marks.forEach(({ start, end }) => {\n      if (start.date.isBefore(calendarEarliest, 'day')) {\n        start.mark = false;\n        start.offset = 0;\n      } else {\n        start.offset = start.date.diff(calendarEarliest, 'days');\n      }\n      start.offset = start.offset / length;\n      \n      if (end.date.isAfter(calendarLatest, 'day')) {\n        end.mark = false;\n        end.offset = calendar.length - 1;\n      } else {\n        end.offset = end.date.diff(calendarEarliest, 'days');\n      }\n      end.offset = 1 - (end.offset + 1) / length;\n    });\n    \n    return marks;\n  }\n  \n  onToggleDetails(showDetails) {\n    return () => this.setState({ showDetails });\n  }\n}\n\nexport default Sailing;\n","export function getCalendar(minDate, weeks) {\n  return Array.from({ length: 7 * weeks }, (_, i) => {\n    let offset = minDate.clone().add(i, 'days');\n    return {\n      day: offset.day(),\n      date: offset.date(),\n      reference: offset\n    };\n  });\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Summary from '../Summary/Summary';\nimport ModeToggle from '../ModeToggle/ModeToggle';\nimport Sailing from '../Sailing/Sailing';\nimport { getCalendar } from '../../misc/lib';\nimport CHEVRON_LEFT_ICON from '../../assets/chevron-left.svg';\nimport CHEVRON_RIGHT_ICON from '../../assets/chevron-right.svg';\nimport moment from 'moment';\nimport './Search.scss';\n\nclass Search extends Component {\n  static propTypes = {\n    summary: PropTypes.object,\n    sailings: PropTypes.array,\n    margin: PropTypes.number\n  };\n  \n  static defaultProps = {\n    margin: 1\n  };\n  \n  constructor(props) {\n    super(props);\n    this.onModeChange = this.onModeChange.bind(this);\n    this.onCalendarChange = this.onCalendarChange.bind(this);\n    this.changeCalendar = this.changeCalendar.bind(this);\n    \n    const { sailings, margin } = props;\n    let earliest = moment.min(\n      sailings.map(\n        ({ routeDetails }) => moment(routeDetails.portCutoffDateTime)\n      )\n      ),\n      latest = moment.max(\n        sailings.map(\n          ({ routeDetails }) => moment(routeDetails.vesselArrivalDate)\n        )\n      );\n    earliest.subtract(margin, 'days');\n    latest.add(margin, 'days');\n    latest.subtract(3, 'weeks');\n    \n    this.state = {\n      viewType: 'COST',\n      earliest,\n      latest,\n      calendar: getCalendar(\n        earliest,\n        4\n      )\n    };\n  }\n  \n  render() {\n    const { summary } = this.props;\n    return (\n      <div className='search-page'>\n        <h2 className='title'>Search Result</h2>\n        <Summary {...summary} />\n        <div className='action-container'>\n          <div className='filter'>Filter View</div>\n          <div className='pricing-history'>Pricing History</div>\n          <ModeToggle onSelectionChange={this.onModeChange}/>\n        </div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n  \n  renderContent() {\n    const { sailings } = this.props,\n      { calendar, viewType } = this.state;\n    return (\n      <div className='sailings'>\n        {this.renderHeader(calendar)}\n        {sailings.map((each, key) => (\n          <Sailing\n            key={key}\n            viewType={viewType}\n            calendar={calendar}\n            changeCalendar={this.changeCalendar}\n            {...each}\n          />\n        ))}\n      </div>\n    );\n  }\n  \n  renderHeader(calendar) {\n    const { viewType } = this.state;\n    let content = null,\n      headerClassName = '';\n    if (viewType === 'COST') {\n      content = this.renderTableHeader();\n      headerClassName = 'cost-view-header';\n    } else {\n      content = this.renderCalendar(calendar);\n      headerClassName = 'schedule-view-header';\n    }\n    return (\n      <div className='sailing-header'>\n        <div className='blank'>&nbsp;</div>\n        <div className={['headers', headerClassName].join(' ')}>\n          {content}\n        </div>\n      </div>\n    );\n  }\n  \n  renderTableHeader() {\n    const {\n        sailings: [first]\n      } = this.props,\n      { rate } = first;\n    \n    let headers = [\n      {\n        title: 'Date of Sailing',\n        className: 'departure'\n      },\n      {\n        title: 'Sailing Days',\n        className: 'routing'\n      },\n      {\n        title: `Freight Per ${rate.rateType}`,\n        className: 'rate'\n      },\n      {\n        title: 'Delivery Date',\n        className: 'delivery'\n      }\n    ];\n    \n    return headers.map(({ title, className }, key) => (\n      <div\n        key={key}\n        className={['column', className].join(' ')}\n      >\n        {title}\n      </div>\n    ));\n  }\n  \n  renderCalendar(calendar) {\n    const firstVisibleDay = 0,\n      lastVisibleDay = 27;\n    \n    return calendar.map(({ date, day, reference }, key) => {\n      const classNames = ['day'];\n      let content = null;\n      if (key === firstVisibleDay) {\n        classNames.push('icon', 'left');\n        content = [\n          <img\n            key='left'\n            alt='left'\n            className='icon'\n            src={CHEVRON_LEFT_ICON}\n            onClick={this.onCalendarChange({ offset: -1, unit: 'weeks' })}\n          />,\n          <span key='month' className='month left'>\n            {reference.format('MMMM YYYY')}\n          </span>\n        ];\n      } else if (key === lastVisibleDay) {\n        classNames.push('icon', 'right');\n        content = [\n          <img\n            key='right'\n            alt='right'\n            className='icon'\n            src={CHEVRON_RIGHT_ICON}\n            onClick={this.onCalendarChange({ offset: 1, unit: 'weeks' })}\n          />,\n          <span key='month' className='month right'>\n            {reference.format('MMMM YYYY')}\n          </span>\n        ];\n      } else {\n        if (day === 0) {\n          classNames.push('sunday');\n        }\n        content = date;\n      }\n      return (\n        <div\n          key={key}\n          className={classNames.join(' ')}\n        >\n          {content}\n        </div>\n      );\n    });\n  }\n  \n  onModeChange(viewType) {\n    this.setState({ viewType });\n  }\n  \n  changeCalendar({ offset, unit }) {\n    const { earliest, latest, calendar: [calendarEarliest] } = this.state;\n    \n    let scrollDate = calendarEarliest.reference.clone();\n    scrollDate.add(offset, unit);\n    \n    scrollDate = moment.max(\n      moment.min(\n        scrollDate,\n        latest\n      ),\n      earliest\n    );\n    if (scrollDate.isSame(calendarEarliest.reference, 'day')) {\n      return;\n    }\n    \n    this.setState({\n      calendar: getCalendar(scrollDate, 4)\n    });\n  }\n  \n  onCalendarChange(params) {\n    return () => this.changeCalendar(params);\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { getFakeSailingData, SUMMARY_RESPONSE } from '../../misc/mock';\nimport Search from '../Search/Search';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <div className='sidebar'>\n          <span>L</span>\n          <span>A</span>\n          <span>B</span>\n          <span>C</span>\n          <span>D</span>\n        </div>\n        <Search\n          summary={SUMMARY_RESPONSE}\n          sailings={getFakeSailingData(5)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve misc; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    \n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        \n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n              \n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n              \n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}