{"version":3,"sources":["misc/mock.js","components/Summary/Summary.js","components/ModeToggle/ModeToggle.js","misc/templates.js","components/Sailing/Sailing.js","components/Search/Search.js","misc/lib.js","components/App/App.js","serviceWorker.js","index.js"],"names":["SUMMARY_RESPONSE","sourcePort","portName","portCountry","destinationPort","type","container","incoTerms","getRandomInt","lower","upper","Math","floor","random","getFakeSailingData","nos","Array","from","length","earliest","moment","add","latest","sailingDate","transitTime","departure","toISOString","travelDate","travelDays","rate","rateCurrency","rateType","deliveryDate","clone","transhipment","routeDetails","routing","vesselDepartureDate","srcPort","containers","weight","carrier","dstPort","portOpenDate","subtract","ensCutoffDateTime","docCutoffDateTime","portCutoffDateTime","vesselArrivalDate","costDetails","totalCost","totalCostCurrency","details","title","cost","baseCost","baseCurrency","costType","description","notes","message","getFakeSailing","days","diff","addition","getRandomDate","sort","_ref","_ref2","a","b","am","bm","isAfter","isBefore","Summary","props","template","subtitle","className","react_default","createElement","map","key","join","ModeToggle","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selected","_this2","options","label","value","classNames","push","onClick","onOptionSelected","_this3","target","setState","onSelectionChange","Component","MODE_OPTIONS","Sailing","onToggleDetails","bind","assertThisInitialized","showDetails","viewType","mobileToggleClassNames","renderOfferPrice","renderCostView","renderScheduleView","renderDetails","_this$props$costDetai","toLocaleString","_this$props","_this$props$routeDeta","format","column","concat","each","calender","day","_this$props$routeDeta2","style","left","offset","right","date","computedOffsets","arrival","offsets","unit","mark","text","getSailingComputedOffsets","renderCalenderBackground","renderSailingInfo","renderTimeline","objectSpread","_this$props2","unitOffset","calenderLatest","reference","min","forEach","_ref3","i","isSame","defaultProps","Search","onModeChange","minDate","Date","summary","components_Summary_Summary","components_ModeToggle_ModeToggle","renderContent","sailings","getCalender","renderHeader","components_Sailing_Sailing","assign","slicedToArray","headers","headerClassName","array","weeks","_","App","components_Search_Search","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fdab4a20.chunk.js","sourcesContent":["import moment from 'moment';\n\nexport const SUMMARY_RESPONSE = {\n  sourcePort: {\n    portName: 'Nhava Sheva Port',\n    portCountry: 'India'\n  },\n  destinationPort: {\n    portName: 'Felixstowe Port',\n    portCountry: 'United Kingdom'\n  },\n  type: 'FCL',\n  container: 1,\n  incoTerms: 'EXPORT-CNG'\n};\n\nexport function getRandomDate(lower, upper) {\n  let days = upper.diff(lower, 'days'),\n    addition = Math.floor(Math.random() * days);\n  return lower.add(addition, 'days');\n}\n\nexport function getRandomInt(lower, upper) {\n  return Math.floor(lower + Math.random() * (upper - lower));\n}\n\nexport function getFakeSailing(sailingDate, transitTime) {\n  let departure = sailingDate.toISOString();\n  return {\n    travelDate: departure,\n    travelDays: transitTime,\n    rate: {\n      rateCurrency: 'USD',\n      rate: 575,\n      rateType: '20\\''\n    },\n    deliveryDate: sailingDate\n      .clone()\n      .add(transitTime + 2, 'days')\n      .toISOString(),\n    transhipment: 'Direct',\n    routeDetails: {\n      routing: 'Direct Shipment',\n      vesselDepartureDate: departure,\n      srcPort: 'Nhava Sheva Port, India',\n      containers: [\n        {\n          type: 'size_20',\n          weight: 23\n        }\n      ],\n      carrier: 'ECON SHIPPING',\n      dstPort: 'Felixstowe Port, United Kingdom',\n      portOpenDate: sailingDate\n        .clone()\n        .subtract(4, 'days')\n        .toISOString(),\n      ensCutoffDateTime: sailingDate\n        .clone()\n        .subtract(3, 'days')\n        .toISOString(),\n      docCutoffDateTime: sailingDate\n        .clone()\n        .subtract(2, 'days')\n        .toISOString(),\n      portCutoffDateTime: sailingDate\n        .clone()\n        .subtract(1, 'days')\n        .toISOString(),\n      vesselArrivalDate: sailingDate\n        .clone()\n        .add(transitTime, 'days')\n        .toISOString()\n    },\n    costDetails: {\n      totalCost: 53225,\n      totalCostCurrency: 'INR',\n      details: [\n        {\n          title: 'Origin Terminal Charges',\n          cost: [\n            {\n              rateCurrency: 'INR',\n              baseCost: 9000,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Factory THC',\n              rate: 9000\n            },\n            {\n              rateCurrency: 'INR',\n              baseCost: 250,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Seal Charges',\n              rate: 250\n            },\n            {\n              rateCurrency: 'INR',\n              baseCost: 2500,\n              baseCurrency: 'INR',\n              costType: 'BL',\n              description: 'BL Fee',\n              rate: 2500\n            }\n          ]\n        },\n        {\n          title: 'Shipping Line (ECON SHIPPING)',\n          cost: [\n            {\n              rateCurrency: 'USD',\n              baseCost: 40825,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Freight',\n              rate: 575\n            }\n          ]\n        },\n        {\n          title: 'Coordination',\n          cost: [\n            {\n              rateCurrency: 'INR',\n              baseCost: 650,\n              baseCurrency: 'INR',\n              costType: '20\\'',\n              description: 'Coordination Fees',\n              rate: 650\n            }\n          ]\n        }\n      ],\n      notes: [\n        {\n          type: 'free_days',\n          message:\n            'Detention free days subject to approval from shipping line.'\n        },\n        {\n          type: 'terminal',\n          message: 'Terminal charges are estimated.'\n        },\n        {\n          type: 'rate_expiry',\n          message: 'Rate\\'valid until 2018-12-31.'\n        },\n        {\n          type: 'currency',\n          message:\n            'Currency exchange used is 1 USD = 71 INR. Final rate subject to fluctuations in currency exchange.'\n        }\n      ]\n    }\n  };\n}\n\nexport function getFakeSailingData(nos) {\n  return Array.from({ length: nos }, () => {\n    let earliest = moment().add(3, 'days'),\n      latest = earliest.add(getRandomInt(10, 20), 'days'),\n      reference = getRandomDate(earliest, latest);\n    return getFakeSailing(reference, getRandomInt(5, 15));\n  }).sort(({ travelDate: a }, { travelDate: b }) => {\n    let am = moment(a),\n      bm = moment(b);\n    if (am.isAfter(bm)) {\n      return 1;\n    }\n    if (am.isBefore(bm)) {\n      return -1;\n    }\n    return 0;\n  });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Summary.scss';\n\nSummary.propTypes = {\n  sourcePort: PropTypes.shape({\n    portName: PropTypes.string,\n    portCountry: PropTypes.string\n  }),\n  destinationPort: PropTypes.shape({\n    portName: PropTypes.string,\n    portCountry: PropTypes.string\n  }),\n  type: PropTypes.string,\n  container: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  incoTerms: PropTypes.string\n};\n\nfunction Summary(props) {\n  const { sourcePort, destinationPort, type, container, incoTerms } = props;\n  const template = [\n    {\n      title: sourcePort.portName,\n      subtitle: sourcePort.portCountry,\n      className: 'source'\n    },\n    {\n      title: '→',\n      subtitle: null,\n      className: 'to'\n    },\n    {\n      title: destinationPort.portName,\n      subtitle: destinationPort.portCountry,\n      className: 'destination'\n    },\n    {\n      title: type,\n      subtitle: 'Type',\n      className: 'type'\n    },\n    {\n      title: container,\n      subtitle: 'Container',\n      className: 'container'\n    },\n    {\n      title: incoTerms,\n      subtitle: 'INCO Terms',\n      className: 'inco'\n    }\n  ];\n  return (\n    <div className='summary'>\n      {template.map(({ title, subtitle, className }, key) => (\n        <div className={['partial', className].join(' ')} key={key}>\n          <div className='title'>{title}</div>\n          {subtitle && <div className='subtitle'>{subtitle}</div>}\n        </div>\n      ))}\n      <div className='partial action'>\n        <button className='themed secondary modify'>Modify</button>\n        <button className='themed primary search'>Search</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Summary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ModeToggle.scss';\n\nclass ModeToggle extends Component {\n  static propTypes = {\n    options: PropTypes.arrayOf(\n      PropTypes.shape({\n        label: PropTypes.string,\n        value: PropTypes.string\n      })\n    ).isRequired,\n    onSelectionChange: PropTypes.func\n  };\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: 0\n    };\n  }\n  \n  render() {\n    const { options } = this.props,\n      { selected } = this.state;\n    return (\n      <div className='mode-toggle'>\n        {options.map(({ label, value }, key) => {\n          const classNames = ['mode-option'];\n          if (selected === key) {\n            classNames.push('selected');\n          }\n          return (\n            <button\n              key={key}\n              value={value}\n              className={classNames.join(' ')}\n              onClick={this.onOptionSelected(key)}\n            >\n              {label}\n            </button>\n          );\n        })}\n      </div>\n    );\n  }\n  \n  onOptionSelected(key) {\n    return ({ target: { value } }) => {\n      this.setState({ selected: key });\n      const { onSelectionChange } = this.props;\n      onSelectionChange(value);\n    };\n  }\n}\n\nexport default ModeToggle;\n","export const MODE_OPTIONS = [\n  {\n    label: 'List View',\n    value: 'COST'\n  },\n  {\n    label: 'Schedules View',\n    value: 'SCHEDULE'\n  }\n];\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport './Sailings.scss';\n\nclass Sailing extends Component {\n  static propTypes = {\n    travelDate: PropTypes.string,\n    travelDays: PropTypes.number,\n    rate: PropTypes.shape({\n      rateCurrency: PropTypes.string,\n      rate: PropTypes.number,\n      rateType: PropTypes.string\n    }),\n    deliveryDate: PropTypes.string,\n    transhipment: PropTypes.string,\n    routeDetails: PropTypes.shape({\n      routing: PropTypes.string,\n      vesselDepartureDate: PropTypes.string,\n      srcPort: PropTypes.string,\n      containers: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          weight: PropTypes.number\n        })\n      ),\n      carrier: PropTypes.string,\n      dstPort: PropTypes.string,\n      portOpenDate: PropTypes.string,\n      ensCutoffDateTime: PropTypes.string,\n      docCutoffDateTime: PropTypes.string,\n      portCutoffDateTime: PropTypes.string,\n      vesselArrivalDate: PropTypes.string\n    }),\n    costDetails: PropTypes.shape({\n      totalCost: PropTypes.number,\n      totalCostCurrency: PropTypes.string,\n      details: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string,\n          cost: PropTypes.arrayOf(\n            PropTypes.shape({\n              rateCurrency: PropTypes.string,\n              baseCost: PropTypes.number,\n              baseCurrency: PropTypes.string,\n              costType: PropTypes.string,\n              description: PropTypes.string,\n              rate: PropTypes.number\n            })\n          )\n        })\n      ),\n      notes: PropTypes.arrayOf(\n        PropTypes.shape({\n          type: PropTypes.string,\n          message: PropTypes.string\n        })\n      )\n    }),\n    \n    viewType: PropTypes.oneOf(['COST', 'SCHEDULE']),\n    calender: PropTypes.arrayOf(\n      PropTypes.shape({\n        day: PropTypes.number,\n        date: PropTypes.number,\n        reference: PropTypes.object\n      })\n    )\n  };\n  \n  static defaultProps = {\n    viewType: 'COST'\n  };\n  \n  constructor(props) {\n    super(props);\n    this.onToggleDetails = this.onToggleDetails.bind(this);\n    this.state = {\n      showDetails: false\n    };\n  }\n  \n  render() {\n    const { showDetails } = this.state,\n      { viewType } = this.props,\n      classNames = ['sailing-option'],\n      mobileToggleClassNames = ['mobile', 'detail-toggle'];\n    if (showDetails) {\n      classNames.push('details-visible');\n      mobileToggleClassNames.push('hide');\n    } else {\n      mobileToggleClassNames.push('show');\n    }\n    return (\n      <div className={classNames.join(' ')}>\n        {this.renderOfferPrice()}\n        {viewType === 'COST'\n          ? this.renderCostView()\n          : this.renderScheduleView()}\n        {showDetails && this.renderDetails()}\n        <div\n          className={mobileToggleClassNames.join(' ')}\n          onClick={this.onToggleDetails(!showDetails)}\n        >\n          {showDetails ? 'Hide Details' : 'Show Details'}\n        </div>\n      </div>\n    );\n  }\n  \n  renderOfferPrice() {\n    const {\n      costDetails: { totalCost, totalCostCurrency }\n    } = this.props;\n    return (\n      <div className='sailing-price'>\n        <div className='price'>\n          {totalCostCurrency.toLocaleString()} {totalCost}\n        </div>\n        <button className='themed primary'>Select</button>\n        <div\n          className='detail-toggle show'\n          onClick={this.onToggleDetails(true)}\n        >\n          Show Details\n        </div>\n      </div>\n    );\n  }\n  \n  renderCostView() {\n    const {\n        travelDate,\n        travelDays,\n        rate,\n        transhipment,\n        deliveryDate,\n        routeDetails: { srcPort, dstPort, carrier }\n      } = this.props,\n      template = [\n        {\n          title: moment(travelDate).format('MMM Do'),\n          subtitle: srcPort,\n          column: 'Date of Sailing',\n          className: 'departure'\n        },\n        {\n          title: `${travelDays} Days`,\n          subtitle: transhipment,\n          column: 'Sailing Days',\n          className: 'routing'\n        },\n        {\n          title: `${rate.rateCurrency} ${rate.rate}`,\n          subtitle: carrier,\n          column: `Freight Per ${rate.rateType}`,\n          className: 'rate'\n        },\n        {\n          title: moment(deliveryDate).format('MMM Do'),\n          subtitle: dstPort,\n          column: 'Delivery Date',\n          className: 'delivery'\n        }\n      ];\n    return (\n      <div className='cost-view'>\n        {template.map((each, key) => {\n          const { title, subtitle, column, className } = each;\n          return [\n            <div\n              key={`label-${key}`}\n              className={['label', className].join(' ')}\n            >\n              {column}\n            </div>,\n            <div\n              key={`value-${key}`}\n              className={['column', className].join(' ')}\n            >\n              <div className='title'>{title}</div>\n              <div className='subtitle'>{subtitle}</div>\n            </div>\n          ];\n        })}\n      </div>\n    );\n  }\n  \n  renderCalenderBackground() {\n    const { calender } = this.props;\n    return (\n      <div className='background'>\n        {calender.map(({ day }, key) => {\n          const classNames = ['day'];\n          if (day === 0) {\n            classNames.push('sunday');\n          }\n          return (\n            <div key={key} className={classNames.join(' ')}>\n              &nbsp;\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n  \n  renderSailingInfo(departure) {\n    const {\n      routeDetails: { routing, srcPort, dstPort, carrier }\n    } = this.props;\n    return (\n      <div className='info'>\n        <div\n          className='content'\n          style={{\n            left: `${departure.offset * 100}%`,\n            right: 0\n          }}\n        >\n          <span className='route'>{`${srcPort} to ${dstPort}`}</span>\n          <span className='routing'>{routing}</span>\n          <span className='departure'>\n                        {departure.date.format('Do MMMM')}\n                    </span>\n          <span className='carrier'>{carrier}</span>\n        </div>\n      </div>\n    );\n  }\n  \n  renderTimeline(computedOffsets) {\n    const {\n        earliest,\n        latest,\n        departure,\n        arrival,\n        offsets,\n        unit\n      } = computedOffsets,\n      { travelDays } = this.props;\n    return (\n      <div className='timeline'>\n        <div\n          className='blocks complete-block'\n          style={{\n            left: `${earliest.offset * 100}%`,\n            right: `${latest.offset * 100}%`\n          }}\n        >\n          &nbsp;\n        </div>\n        <div\n          className='blocks sailing-block'\n          style={{\n            left: `${departure.offset * 100}%`,\n            right: `${arrival.offset * 100}%`\n          }}\n        >\n          <span>{travelDays}</span>&nbsp;Days\n        </div>\n        {offsets.map(({ date, format, offset, mark, text }, key) => {\n          let left = offset * 100,\n            right = (1 - (offset + unit)) * 100,\n            classNames = ['blocks', 'event-block'];\n          if (mark) {\n            classNames.push('mark');\n          }\n          return [\n            <div\n              key={`${key}-event`}\n              className={classNames.join(' ')}\n              style={{\n                left: `${left}%`,\n                right: `${right}%`\n              }}\n            >\n              &nbsp;\n            </div>,\n            <div\n              key={`${key}-tooltip`}\n              className='tooltip-container'\n              style={{\n                left: `${left}%`\n              }}\n            >\n              <div className='tooltip'>\n                {text}\n                <br/>\n                {date.format(format)}\n              </div>\n            </div>\n          ];\n        })}\n      </div>\n    );\n  }\n  \n  renderScheduleView() {\n    const { calender } = this.props,\n      offsets = this.getSailingComputedOffsets(),\n      { departure } = offsets,\n      unit = 1 / calender.length;\n    return (\n      <div className='schedule-view'>\n        {this.renderCalenderBackground()}\n        <div className='timeline-container'>\n          {this.renderSailingInfo(departure)}\n          {this.renderTimeline({ ...offsets, unit })}\n        </div>\n      </div>\n    );\n  }\n  \n  renderDetails() {\n    return (\n      <div className='details'>\n        <div className='content'>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquid, consectetur corporis dolor dolore ea\n            incidunt, ipsam iste molestiae neque nisi, quae rem ut\n            veniam! Harum id quae temporibus. Optio, ratione.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquid, consectetur corporis dolor dolore ea\n            incidunt, ipsam iste molestiae neque nisi, quae rem ut\n            veniam! Harum id quae temporibus. Optio, ratione.\n          </p>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipisicing\n            elit. Aliquid, consectetur corporis dolor dolore ea\n            incidunt, ipsam iste molestiae neque nisi, quae rem ut\n            veniam! Harum id quae temporibus. Optio, ratione.\n          </p>\n        </div>\n        <div\n          className='detail-toggle hide'\n          onClick={this.onToggleDetails(false)}\n        >\n          Hide Details\n        </div>\n      </div>\n    );\n  }\n  \n  getSailingComputedOffsets() {\n    const { calender, routeDetails } = this.props,\n      unitOffset = 1 / calender.length,\n      calenderLatest = calender[calender.length - 1].reference,\n      ensCutoffDateTime = moment(routeDetails.ensCutoffDateTime),\n      docCutoffDateTime = moment(routeDetails.docCutoffDateTime),\n      portCutoffDateTime = moment(routeDetails.portCutoffDateTime),\n      vesselDepartureDate = moment(routeDetails.vesselDepartureDate),\n      vesselArrivalDate = moment.min(\n        moment(routeDetails.vesselArrivalDate),\n        calenderLatest\n      ),\n      deliveryDate = moment.min(\n        moment(this.props.deliveryDate),\n        calenderLatest\n      ),\n      earliest = {\n        date: ensCutoffDateTime,\n        offset: 0\n      },\n      latest = {\n        date: deliveryDate,\n        offset: 0\n      },\n      departure = {\n        date: vesselDepartureDate,\n        offset: 0\n      },\n      arrival = {\n        date: vesselArrivalDate,\n        offset: 0\n      },\n      offsets = [\n        {\n          date: ensCutoffDateTime,\n          offset: 0,\n          mark: false,\n          text: 'ENS Cutoff',\n          format: 'LLLL'\n        },\n        {\n          date: docCutoffDateTime,\n          offset: 0,\n          mark: true,\n          text: 'Doc. Cutoff',\n          format: 'LLLL'\n        },\n        {\n          date: portCutoffDateTime,\n          offset: 0,\n          mark: true,\n          text: 'Port Cutoff',\n          format: 'LLLL'\n        },\n        {\n          date: deliveryDate,\n          offset: 0,\n          mark: true,\n          text: 'Delivery Date',\n          format: 'LLLL'\n        }\n      ];\n    calender.forEach(({ reference }, i) => {\n      const offset = i / calender.length;\n      if (earliest.date.isSame(reference, 'days')) {\n        earliest.offset = offset;\n      }\n      if (latest.date.isSame(reference, 'days')) {\n        latest.offset = 1 - (offset + unitOffset);\n      }\n      if (departure.date.isSame(reference, 'days')) {\n        departure.offset = offset;\n      }\n      if (arrival.date.isSame(reference, 'days')) {\n        arrival.offset = 1 - (offset + unitOffset);\n      }\n      offsets.forEach(each => {\n        if (each.date.isSame(reference, 'days')) {\n          each.offset = offset;\n        }\n      });\n    });\n    return {\n      earliest,\n      latest,\n      departure,\n      arrival,\n      offsets\n    };\n  }\n  \n  onToggleDetails(showDetails) {\n    return () => this.setState({ showDetails });\n  }\n}\n\nexport default Sailing;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Summary from '../Summary/Summary';\nimport ModeToggle from '../ModeToggle/ModeToggle';\nimport { MODE_OPTIONS } from '../../misc/templates';\nimport Sailing from '../Sailing/Sailing';\nimport { findEarliest, getCalender } from '../../misc/lib';\nimport './Search.scss';\n\nclass Search extends Component {\n  static propTypes = {\n    summary: PropTypes.object,\n    sailings: PropTypes.array\n  };\n  \n  constructor(props) {\n    super(props);\n    this.onModeChange = this.onModeChange.bind(this);\n    this.state = {\n      viewType: 'COST',\n      minDate: new Date()\n    };\n  }\n  \n  render() {\n    const { summary } = this.props;\n    return (\n      <div className='search-page'>\n        <h2 className='title'>Search Result</h2>\n        <Summary {...summary} />\n        <div className='action-container'>\n          <div className='filter'>Filter View</div>\n          <ModeToggle\n            options={MODE_OPTIONS}\n            onSelectionChange={this.onModeChange}\n          />\n        </div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n  \n  renderContent() {\n    const { sailings } = this.props,\n      { viewType } = this.state,\n      { calender } = this.getCalender();\n    return (\n      <div className='sailings'>\n        {this.renderHeader(calender)}\n        {sailings.map((each, key) => (\n          <Sailing\n            key={key}\n            viewType={viewType}\n            calender={calender}\n            {...each}\n          />\n        ))}\n      </div>\n    );\n  }\n  \n  renderHeader(calender) {\n    const {\n        sailings: [first]\n      } = this.props,\n      { rate } = first,\n      { viewType } = this.state;\n    let headers = null,\n      headerClassName = 'schedule-view-header';\n    if (viewType === 'COST') {\n      headerClassName = 'cost-view-header';\n      headers = [\n        {\n          title: 'Date of Sailing',\n          className: 'departure'\n        },\n        {\n          title: 'Sailing Days',\n          className: 'routing'\n        },\n        {\n          title: `Freight Per ${rate.rateType}`,\n          className: 'rate'\n        },\n        {\n          title: 'Delivery Date',\n          className: 'delivery'\n        }\n      ];\n    }\n    return (\n      <div className='sailing-header'>\n        <div className='blank'>&nbsp;</div>\n        <div className={['headers', headerClassName].join(' ')}>\n          {headers\n            ? headers.map(({ title, className }, key) => (\n              <div\n                key={key}\n                className={['column', className].join(' ')}\n              >\n                {title}\n              </div>\n            ))\n            : calender.map(({ date, day }, key) => {\n              const classNames = ['day'];\n              if (day === 0) {\n                classNames.push('sunday');\n              }\n              return (\n                <div\n                  key={key}\n                  className={classNames.join(' ')}\n                >\n                  {date}\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n  \n  onModeChange(viewType) {\n    this.setState({ viewType });\n  }\n  \n  getCalender() {\n    const { sailings } = this.props,\n      earliest = findEarliest(sailings, 'travelDate').subtract(3, 'days'),\n      calender = getCalender(earliest, 4);\n    return {\n      earliest,\n      calender\n    };\n  }\n}\n\nSearch.propTypes = {};\n\nexport default Search;\n","import moment from 'moment';\n\nexport function getCalender(minDate, weeks) {\n  let reference = moment(minDate);\n  return Array.from({ length: 7 * weeks }, (_, i) => {\n    let offset = reference.clone().add(i, 'days');\n    return {\n      day: offset.day(),\n      date: offset.date(),\n      reference: offset\n    };\n  });\n}\n\nexport function findEarliest(array, key) {\n  return moment.min(array.map(({ [key]: date }) => moment(date)));\n}\n","import React, { Component } from 'react';\nimport { getFakeSailingData, SUMMARY_RESPONSE } from '../../misc/mock';\nimport Search from '../Search/Search';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <div className='sidebar'>\n          <span>L</span>\n          <span>A</span>\n          <span>B</span>\n          <span>C</span>\n          <span>D</span>\n        </div>\n        <Search\n          summary={SUMMARY_RESPONSE}\n          sailings={getFakeSailingData(5)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve misc; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n    \n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      \n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        \n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n              \n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n              \n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null &&\n          contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}